<!-- Navbar Partial - ‡πÉ‡∏ä‡πâ‡∏£‡πà‡∏ß‡∏°‡∏Å‡∏±‡∏ô‡∏ó‡∏∏‡∏Å‡∏´‡∏ô‡πâ‡∏≤ -->
<nav class="navbar">
    <div class="container">
        <div style="display: flex; justify-content: space-between; align-items: center; width: 100%;">
            <a href="/" class="navbar-brand">
                <i class="fas fa-microphone-alt"></i>
                Junrai Karaoke
            </a>
            <ul class="navbar-nav">
                <li><a href="/" class="nav-link" data-page="home">‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å</a></li>
                <li><a href="/rooms" class="nav-link" data-page="rooms">‡∏´‡πâ‡∏≠‡∏á‡∏Ñ‡∏≤‡∏£‡∏≤‡πÇ‡∏≠‡πÄ‡∏Å‡∏∞</a></li>
                <li><a href="/bookings" class="nav-link" data-page="bookings">‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á</a></li>
                <!-- ‡∏õ‡∏∏‡πà‡∏°‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à - ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô -->
                <li><a href="/receipts" class="nav-link" id="receiptsLink" data-page="receipts" style="display: none;">‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à</a></li>
                <li><a href="/contact" class="nav-link" data-page="contact">‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÄ‡∏£‡∏≤</a></li>
                <!-- Links ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô -->
                <li><a href="/dashboard" class="nav-link" id="dashboardLink" style="display: none;">‡πÅ‡∏î‡∏ä‡∏ö‡∏≠‡∏£‡πå‡∏î</a></li>
                <!-- Authentication Links -->
                <li><a href="/auth" class="nav-link" id="authLink">‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö</a></li>
                <li><button class="btn btn-outline" onclick="logout()" id="logoutBtn" style="display: none;">‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö</button></li>
            </ul>
            <!-- Store Hours Info (always visible, styled) -->
            <div class="store-hours-info" id="storeHoursInfo" style="margin-left: 32px; min-width: 180px;">
                <div class="hours-display">
                    <i class="fas fa-clock"></i>
                    <div class="hours-text">
                        <span class="hours-time">11.00 - 21.00</span>
                        <span class="hours-duration">10 ‡∏ä‡∏°</span>
                    </div>
                </div>
                <div class="days-display">
                    <span class="open-days">‡πÄ‡∏õ‡∏¥‡∏î: ‡∏≠‡∏±‡∏á‡∏Ñ‡∏≤‡∏£ - ‡∏≠‡∏≤‡∏ó‡∏¥‡∏ï‡∏¢‡πå</span>
                    <span class="closed-day" style="color: #d9534f;">(‡∏´‡∏¢‡∏∏‡∏î) ‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå</span>
                </div>
                <div class="store-status" id="storeStatus">
                    <span class="status-text" id="statusText">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö...</span>
                </div>
            </div>
        </div>
    </div>
</nav>

<!-- Script ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ Navbar Authentication -->
<script>
    // Store status updater
    function updateStoreStatus() {
        const now = new Date();
        const currentDay = now.getDay(); // 0 = Sunday, 1 = Monday, etc.
        const currentHour = now.getHours();
        const currentMinute = now.getMinutes();
        const currentTime = currentHour + (currentMinute / 60);

        const statusElement = document.getElementById('statusText');
        const hoursInfo = document.getElementById('storeHoursInfo');

        // Store hours: 11:00 - 21:00, Tuesday - Sunday (Closed Monday)
        const openTime = 11; // 11:00
        const closeTime = 21; // 21:00
        const isMonday = currentDay === 1;
        const isOpenDays = currentDay >= 2 || currentDay === 0; // Tuesday-Sunday
        const isWithinHours = currentTime >= openTime && currentTime < closeTime;

        if (isMonday) {
            statusElement.textContent = 'üî¥ ‡∏õ‡∏¥‡∏î (‡∏ß‡∏±‡∏ô‡∏´‡∏¢‡∏∏‡∏î)';
            statusElement.className = 'status-text status-closed';
            hoursInfo.classList.add('store-closed');
        } else if (isOpenDays && isWithinHours) {
            const hoursLeft = closeTime - currentTime;
            const hoursText = hoursLeft > 1 ? `${Math.floor(hoursLeft)} ‡∏ä‡∏°` : `${Math.floor(hoursLeft * 60)} ‡∏ô‡∏≤‡∏ó‡∏µ`;
            statusElement.textContent = `üü¢ ‡πÄ‡∏õ‡∏¥‡∏î (‡∏≠‡∏µ‡∏Å ${hoursText})`;
            statusElement.className = 'status-text status-open';
            hoursInfo.classList.remove('store-closed');
        } else {
            // Check if tomorrow is open
            const tomorrow = new Date(now);
            tomorrow.setDate(tomorrow.getDate() + 1);
            const tomorrowDay = tomorrow.getDay();

            if (tomorrowDay === 1) {
                statusElement.textContent = 'üî¥ ‡∏õ‡∏¥‡∏î (‡πÄ‡∏õ‡∏¥‡∏î‡∏ß‡∏±‡∏ô‡∏≠‡∏±‡∏á‡∏Ñ‡∏≤‡∏£ 11:00)';
            } else if (currentTime < openTime) {
                const hoursUntilOpen = openTime - currentTime;
                const timeText = hoursUntilOpen > 1 ? `${Math.floor(hoursUntilOpen)} ‡∏ä‡∏°` : `${Math.floor(hoursUntilOpen * 60)} ‡∏ô‡∏≤‡∏ó‡∏µ`;
                statusElement.textContent = `üü° ‡∏õ‡∏¥‡∏î (‡πÄ‡∏õ‡∏¥‡∏î‡∏≠‡∏µ‡∏Å ${timeText})`;
            } else {
                statusElement.textContent = 'üî¥ ‡∏õ‡∏¥‡∏î (‡πÄ‡∏õ‡∏¥‡∏î‡∏û‡∏£‡∏∏‡πà‡∏á‡∏ô‡∏µ‡πâ 11:00)';
            }
            statusElement.className = 'status-text status-closed';
            hoursInfo.classList.add('store-closed');
        }
    }
    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï navbar ‡∏ï‡∏≤‡∏°‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô
    function updateNavbarAuth() {
        const token = localStorage.getItem('token');
        const userRaw = localStorage.getItem('user');
        const user = userRaw ? JSON.parse(userRaw) : null;
        const authLink = document.getElementById('authLink');
        const logoutBtn = document.getElementById('logoutBtn');
        const dashboardLink = document.getElementById('dashboardLink');
        const receiptsLink = document.getElementById('receiptsLink');

        // Hide all role-based links by default
        if (dashboardLink) dashboardLink.style.display = 'none';
        if (receiptsLink) receiptsLink.style.display = 'none';

        if (token && user) {
            if (authLink) authLink.style.display = 'none';
            if (logoutBtn) logoutBtn.style.display = 'block';

            // Admin role
            if (user.role_id === 1) {
                if (dashboardLink) {
                    dashboardLink.textContent = '‡∏î‡∏π‡πÅ‡∏•‡∏£‡∏∞‡∏ö‡∏ö';
                    dashboardLink.href = '/admin';
                    dashboardLink.style.display = 'block';
                }
                if (receiptsLink) receiptsLink.style.display = 'block';
            }
            // User role
            else {
                if (dashboardLink) {
                    dashboardLink.textContent = '‡πÅ‡∏î‡∏ä‡∏ö‡∏≠‡∏£‡πå‡∏î';
                    dashboardLink.href = '/dashboard';
                    dashboardLink.style.display = 'block';
                }
                if (receiptsLink) receiptsLink.style.display = 'block';
            }
        } else {
            // Guest
            if (authLink) authLink.style.display = 'block';
            if (logoutBtn) logoutBtn.style.display = 'none';
        }
    }

    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö
    function logout() {
        if (confirm('‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö?')) {
            localStorage.removeItem('token');
            localStorage.removeItem('user');
            updateNavbarAuth();
            window.location.href = '/';
        }
    }

    // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ active link ‡∏ï‡∏≤‡∏° URL
    function setActiveNavLink() {
        const currentPath = window.location.pathname;
        const links = document.querySelectorAll('.nav-link[data-page]');
        
        links.forEach(link => {
            link.classList.remove('active');
            const href = link.getAttribute('href');
            if (currentPath === href || (currentPath === '/' && href === '/')) {
                link.classList.add('active');
            }
        });
    }

    // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏´‡∏ô‡πâ‡∏≤‡πÇ‡∏´‡∏•‡∏î
    document.addEventListener('DOMContentLoaded', function() {
    updateNavbarAuth();
    setActiveNavLink();
    updateStoreStatus();
    setInterval(updateStoreStatus, 60000);
    });

    // ‡∏ü‡∏±‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á localStorage (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö multi-tab)
    window.addEventListener('storage', function(e) {
        if (e.key === 'token') {
            updateNavbarAuth();
        }
    });
</script>