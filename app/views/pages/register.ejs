<!-- Register Page -->
<section class="auth-section">
    <div class="auth-container">
        <div class="auth-content">
            <div class="auth-header">
                <div class="auth-logo">
                    <img src="/assets/images/logo.png" alt="Junrai Karaoke" style="height:48px;">
                </div>
                <div class="auth-title">
                    <h2>Register for Junrai Karaoke</h2>
                    <p>Create your account to book rooms and enjoy exclusive offers.</p>
                </div>
            </div>
            
            <!-- Register Form -->
            <form id="registerForm" class="auth-form">
                <div class="form-group">
                    <label for="firstName">First Name *</label>
                    <input type="text" id="firstName" name="firstname" required>
                </div>
                <div class="form-group">
                    <label for="lastName">Last Name *</label>
                    <input type="text" id="lastName" name="lastname" required>
                </div>
                <div class="form-group">
                    <label for="email">Email *</label>
                    <input type="email" id="email" name="email" required>
                </div>
                <div class="form-group">
                    <label for="password">Password *</label>
                    <input type="password" id="password" name="password" required>
                </div>
                <div class="form-actions">
                    <button type="submit" class="btn btn-primary" id="registerBtn">
                        <i class="fas fa-user-plus"></i> Register
                    </button>
                </div>
                <div id="authMessages" class="auth-messages hidden"></div>
            </form>
            
            <div class="auth-footer">
                <span>Already have an account?</span>
                <a href="/login" class="auth-link">Sign in here</a>
            </div>
        </div>
    </div>
</section>

<link rel="stylesheet" href="/styles/auth.css">

<script>
// Helper: Show error message
function showError(msg) {
    const messages = document.getElementById('authMessages');
    messages.textContent = msg;
    messages.classList.remove('hidden');
    messages.className = 'auth-messages error';
}

// Helper: Validate password strength
function isStrongPassword(pw) {
    return /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&]).{12,}$/.test(pw);
}

// Helper: Check email uniqueness via backend
async function isEmailAvailable(email) {
    const res = await fetch(`/api/auth/check-email?email=${encodeURIComponent(email)}`);
    const data = await res.json();
    return data.available;
}

// Register form handler
const registerForm = document.getElementById('registerForm');
registerForm.addEventListener('submit', async function(e) {
    e.preventDefault();
    const formData = {
        firstname: document.getElementById('firstName').value.trim(),
        lastname: document.getElementById('lastName').value.trim(),
        email: document.getElementById('email').value.trim(),
        password: document.getElementById('password').value
    };
    if (!formData.firstname || !formData.lastname || !formData.email || !formData.password) {
        showError('All fields are required.');
        return;
    }
    if (!isStrongPassword(formData.password)) {
        showError('Password must be at least 12 characters and include upper, lower, digit, special char.');
        return;
    }
    if (!(await isEmailAvailable(formData.email))) {
        showError('Email already exists.');
        return;
    }
    // If all good, send to backend
    const response = await fetch('/api/auth/register', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(formData)
    });
    const result = await response.json();
    if (result.success) {
        window.location.href = '/login';
    } else {
        showError(result.message || 'Registration failed.');
    }
});
</script>