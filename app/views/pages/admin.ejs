<!-- Admin Header -->
<section class="admin-header">
    <div class="container">
        <div class="admin-header-content">
            <div class="admin-title">
                <h1>Admin Dashboard</h1>
                <p>Manage your karaoke business operations</p>
            </div>
            <div class="admin-actions">
                <button class="btn btn-outline" id="refreshData">
                    <i class="fas fa-sync-alt"></i>
                    Refresh Data
                </button>
                <a href="/admin/settings" class="btn btn-primary">
                    <i class="fas fa-cog"></i>
                    Settings
                </a>
            </div>
        </div>
        
        <nav class="admin-nav">
            <ul class="admin-nav-list">
                <li><a href="#overview" class="admin-nav-link active">Overview</a></li>
                <li><a href="#bookings" class="admin-nav-link">Bookings</a></li>
                <li><a href="#rooms" class="admin-nav-link">Rooms</a></li>
                <li><a href="#users" class="admin-nav-link">Users</a></li>
                <li><a href="#reports" class="admin-nav-link">Reports</a></li>
            </ul>
        </nav>
    </div>
</section>

<!-- Overview Section -->
<section id="overview" class="admin-section active">
    <div class="container">
        <!-- KPI Cards -->
        <div class="kpi-grid">
            <div class="kpi-card revenue">
                <div class="kpi-icon">
                    <i class="fas fa-dollar-sign"></i>
                </div>
                <div class="kpi-content">
                    <div class="kpi-value" id="totalRevenue">â‚¿0</div>
                    <div class="kpi-label">Total Revenue</div>
                    <div class="kpi-change positive" id="revenueChange">+0%</div>
                </div>
            </div>
            
            <div class="kpi-card bookings">
                <div class="kpi-icon">
                    <i class="fas fa-calendar-check"></i>
                </div>
                <div class="kpi-content">
                    <div class="kpi-value" id="totalBookings">0</div>
                    <div class="kpi-label">Total Bookings</div>
                    <div class="kpi-change positive" id="bookingsChange">+0%</div>
                </div>
            </div>
            
            <div class="kpi-card users">
                <div class="kpi-icon">
                    <i class="fas fa-users"></i>
                </div>
                <div class="kpi-content">
                    <div class="kpi-value" id="totalUsers">0</div>
                    <div class="kpi-label">Total Users</div>
                    <div class="kpi-change positive" id="usersChange">+0%</div>
                </div>
            </div>
            
            <div class="kpi-card rooms">
                <div class="kpi-icon">
                    <i class="fas fa-music"></i>
                </div>
                <div class="kpi-content">
                    <div class="kpi-value" id="occupancyRate">0%</div>
                    <div class="kpi-label">Occupancy Rate</div>
                    <div class="kpi-change neutral" id="occupancyChange">0%</div>
                </div>
            </div>
        </div>
        
        <!-- Charts Row -->
        <div class="charts-row">
            <div class="chart-container">
                <div class="chart-header">
                    <h3>Revenue Trend</h3>
                    <div class="chart-controls">
                        <select id="revenueTimeframe">
                            <option value="7">Last 7 days</option>
                            <option value="30" selected>Last 30 days</option>
                            <option value="90">Last 90 days</option>
                        </select>
                    </div>
                </div>
                <div class="chart-body">
                    <canvas id="revenueChart"></canvas>
                </div>
            </div>
            
            <div class="chart-container">
                <div class="chart-header">
                    <h3>Room Utilization</h3>
                    <div class="chart-controls">
                        <button class="btn btn-small btn-outline" id="exportRoomData">
                            <i class="fas fa-download"></i>
                            Export
                        </button>
                    </div>
                </div>
                <div class="chart-body">
                    <canvas id="roomUtilizationChart"></canvas>
                </div>
            </div>
        </div>
        
        <!-- Recent Activity -->
        <div class="activity-section">
            <div class="activity-header">
                <h3>Recent Activity</h3>
                <a href="#bookings" class="view-all-link">View All</a>
            </div>
            <div class="activity-list" id="recentActivity">
                <!-- Recent activities will be loaded here -->
            </div>
        </div>
        
        <!-- Quick Stats Grid -->
        <div class="quick-stats-grid">
            <div class="stat-box">
                <h4>Today's Bookings</h4>
                <div class="stat-value" id="todayBookings">0</div>
                <div class="stat-detail">
                    <span class="active">Active: <span id="todayActive">0</span></span>
                    <span class="completed">Completed: <span id="todayCompleted">0</span></span>
                </div>
            </div>
            
            <div class="stat-box">
                <h4>Room Status</h4>
                <div class="room-status-grid">
                    <div class="status-item available">
                        <span class="count" id="availableRooms">0</span>
                        <span class="label">Available</span>
                    </div>
                    <div class="status-item occupied">
                        <span class="count" id="occupiedRooms">0</span>
                        <span class="label">Occupied</span>
                    </div>
                    <div class="status-item maintenance">
                        <span class="count" id="maintenanceRooms">0</span>
                        <span class="label">Maintenance</span>
                    </div>
                </div>
            </div>
            
            <div class="stat-box">
                <h4>Peak Hours</h4>
                <div class="peak-hours" id="peakHours">
                    <!-- Peak hours data will be loaded here -->
                </div>
            </div>
            
            <div class="stat-box">
                <h4>Popular Rooms</h4>
                <div class="popular-rooms" id="popularRooms">
                    <!-- Popular rooms data will be loaded here -->
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Bookings Management Section -->
<section id="bookings" class="admin-section">
    <div class="container">
        <div class="section-header">
            <h2>Bookings Management</h2>
            <div class="section-actions">
                <button class="btn btn-outline" id="exportBookings">
                    <i class="fas fa-download"></i>
                    Export
                </button>
                <button class="btn btn-primary" id="addBooking">
                    <i class="fas fa-plus"></i>
                    Add Booking
                </button>
            </div>
        </div>
        
        <!-- Booking Filters -->
        <div class="admin-filters">
            <div class="filter-group">
                <label>Status:</label>
                <select id="bookingStatusFilter">
                    <option value="">All Status</option>
                    <option value="active">Active</option>
                    <option value="completed">Completed</option>
                    <option value="cancelled">Cancelled</option>
                </select>
            </div>
            <div class="filter-group">
                <label>Date Range:</label>
                <input type="date" id="bookingDateFrom">
                <span>to</span>
                <input type="date" id="bookingDateTo">
            </div>
            <div class="filter-group">
                <label>Room:</label>
                <select id="bookingRoomFilter">
                    <option value="">All Rooms</option>
                </select>
            </div>
            <button class="btn btn-outline btn-small" id="clearBookingFilters">Clear</button>
        </div>
        
        <!-- Bookings Table -->
        <div class="table-container">
            <table class="admin-table" id="bookingsTable">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Customer</th>
                        <th>Room</th>
                        <th>Date & Time</th>
                        <th>Duration</th>
                        <th>Amount</th>
                        <th>Status</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody id="bookingsTableBody">
                    <!-- Bookings data will be loaded here -->
                </tbody>
            </table>
        </div>
        
        <div class="table-pagination">
            <div id="bookingsPagination" class="pagination">
                <!-- Pagination will be generated here -->
            </div>
        </div>
    </div>
</section>

<!-- Rooms Management Section -->
<section id="rooms" class="admin-section">
    <div class="container">
        <div class="section-header">
            <h2>Rooms Management</h2>
            <div class="section-actions">
                <button class="btn btn-outline" id="bulkRoomActions">
                    <i class="fas fa-list"></i>
                    Bulk Actions
                </button>
                <button class="btn btn-primary" id="addRoom">
                    <i class="fas fa-plus"></i>
                    Add Room
                </button>
            </div>
        </div>
        
        <!-- Room Grid -->
        <div class="admin-room-grid" id="adminRoomGrid">
            <!-- Rooms will be loaded here -->
        </div>
    </div>
</section>

<!-- Users Management Section -->
<section id="users" class="admin-section">
    <div class="container">
        <div class="section-header">
            <h2>Users Management</h2>
            <div class="section-actions">
                <button class="btn btn-outline" id="exportUsers">
                    <i class="fas fa-download"></i>
                    Export Users
                </button>
                <button class="btn btn-primary" id="addUser">
                    <i class="fas fa-user-plus"></i>
                    Add User
                </button>
            </div>
        </div>
        
        <!-- User Filters -->
        <div class="admin-filters">
            <div class="filter-group">
                <label>Role:</label>
                <select id="userRoleFilter">
                    <option value="">All Roles</option>
                    <option value="customer">Customer</option>
                    <option value="admin">Admin</option>
                </select>
            </div>
            <div class="filter-group">
                <label>Status:</label>
                <select id="userStatusFilter">
                    <option value="">All Status</option>
                    <option value="active">Active</option>
                    <option value="inactive">Inactive</option>
                </select>
            </div>
            <div class="filter-group">
                <label>Search:</label>
                <input type="text" id="userSearch" placeholder="Search by name or email...">
            </div>
        </div>
        
        <!-- Users Table -->
        <div class="table-container">
            <table class="admin-table" id="usersTable">
                <thead>
                    <tr>
                        <th>
                            <input type="checkbox" id="selectAllUsers">
                        </th>
                        <th>ID</th>
                        <th>Name</th>
                        <th>Email</th>
                        <th>Role</th>
                        <th>Status</th>
                        <th>Last Login</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody id="usersTableBody">
                    <!-- Users data will be loaded here -->
                </tbody>
            </table>
        </div>
    </div>
</section>

<!-- Reports Section -->
<section id="reports" class="admin-section">
    <div class="container">
        <div class="section-header">
            <h2>Reports</h2>
            <div class="section-actions">
                <button class="btn btn-outline" id="scheduleReport">
                    <i class="fas fa-clock"></i>
                    Schedule Report
                </button>
                <button class="btn btn-primary" id="generateReport">
                    <i class="fas fa-chart-bar"></i>
                    Generate Report
                </button>
            </div>
        </div>
        
        <!-- Report Types -->
        <div class="report-types">
            <div class="report-card">
                <div class="report-icon">
                    <i class="fas fa-chart-line"></i>
                </div>
                <div class="report-content">
                    <h3>Revenue Report</h3>
                    <p>Detailed revenue analysis with trends and forecasts</p>
                    <button class="btn btn-outline btn-small">Generate</button>
                </div>
            </div>
            
            <div class="report-card">
                <div class="report-icon">
                    <i class="fas fa-calendar-alt"></i>
                </div>
                <div class="report-content">
                    <h3>Booking Analysis</h3>
                    <p>Booking patterns, peak times, and customer behavior</p>
                    <button class="btn btn-outline btn-small">Generate</button>
                </div>
            </div>
            
            <div class="report-card">
                <div class="report-icon">
                    <i class="fas fa-users"></i>
                </div>
                <div class="report-content">
                    <h3>Customer Report</h3>
                    <p>Customer demographics, retention, and satisfaction</p>
                    <button class="btn btn-outline btn-small">Generate</button>
                </div>
            </div>
            
            <div class="report-card">
                <div class="report-icon">
                    <i class="fas fa-music"></i>
                </div>
                <div class="report-content">
                    <h3>Room Utilization</h3>
                    <p>Room usage statistics and optimization suggestions</p>
                    <button class="btn btn-outline btn-small">Generate</button>
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Loading Overlay -->
<div id="loadingOverlay" class="loading-overlay hidden">
    <div class="loading-content">
        <div class="spinner large"></div>
        <p>Loading data...</p>
    </div>
</div>

<!-- JavaScript -->
<script>
document.addEventListener('DOMContentLoaded', function() {
    let currentSection = 'overview';
    let dashboardData = {};
    
    // Initialize dashboard
    initializeDashboard();
    
    // Navigation event listeners
    document.querySelectorAll('.admin-nav-link').forEach(link => {
        link.addEventListener('click', function(e) {
            e.preventDefault();
            const section = this.getAttribute('href').substring(1);
            switchSection(section);
        });
    });
    
    // Refresh data button
    document.getElementById('refreshData').addEventListener('click', refreshAllData);
    
    async function initializeDashboard() {
        showLoading();
        try {
            await Promise.all([
                loadOverviewData(),
                loadRecentActivity(),
                loadRoomStatus()
            ]);
        } catch (error) {
            console.error('Dashboard initialization error:', error);
            showError('Failed to initialize dashboard');
        } finally {
            hideLoading();
        }
    }
    
    async function loadOverviewData() {
        try {
            const response = await fetch('/api/admin/dashboard/overview');
            const data = await response.json();
            
            if (data.success) {
                dashboardData.overview = data.data;
                updateOverviewKPIs(data.data);
                updateQuickStats(data.data);
            }
        } catch (error) {
            console.error('Error loading overview data:', error);
        }
    }
    
    async function loadRecentActivity() {
        try {
            const response = await fetch('/api/admin/dashboard/activity?limit=10');
            const data = await response.json();
            
            if (data.success) {
                displayRecentActivity(data.activities);
            }
        } catch (error) {
            console.error('Error loading recent activity:', error);
        }
    }
    
    async function loadRoomStatus() {
        try {
            const response = await fetch('/api/admin/dashboard/rooms');
            const data = await response.json();
            
            if (data.success) {
                updateRoomStatus(data.rooms);
            }
        } catch (error) {
            console.error('Error loading room status:', error);
        }
    }
    
    function updateOverviewKPIs(data) {
        document.getElementById('totalRevenue').textContent = 'â‚¿' + (data.totalRevenue || 0);
        document.getElementById('totalBookings').textContent = data.totalBookings || 0;
        document.getElementById('totalUsers').textContent = data.totalUsers || 0;
        document.getElementById('occupancyRate').textContent = (data.occupancyRate || 0) + '%';
        
        // Update change indicators
        updateChangeIndicator('revenueChange', data.revenueChange || 0);
        updateChangeIndicator('bookingsChange', data.bookingsChange || 0);
        updateChangeIndicator('usersChange', data.usersChange || 0);
        updateChangeIndicator('occupancyChange', data.occupancyChange || 0);
    }
    
    function updateChangeIndicator(elementId, change) {
        const element = document.getElementById(elementId);
        const sign = change >= 0 ? '+' : '';
        element.textContent = sign + change + '%';
        
        if (change > 0) {
            element.className = 'kpi-change positive';
        } else if (change < 0) {
            element.className = 'kpi-change negative';
        } else {
            element.className = 'kpi-change neutral';
        }
    }
    
    function updateQuickStats(data) {
        document.getElementById('todayBookings').textContent = data.todayBookings || 0;
        document.getElementById('todayActive').textContent = data.todayActive || 0;
        document.getElementById('todayCompleted').textContent = data.todayCompleted || 0;
        
        // Update peak hours
        const peakHoursElement = document.getElementById('peakHours');
        if (data.peakHours && data.peakHours.length > 0) {
            peakHoursElement.innerHTML = data.peakHours.map(hour => 
                `<div class="peak-hour">${hour.hour}:00 (${hour.bookings})</div>`
            ).join('');
        }
        
        // Update popular rooms
        const popularRoomsElement = document.getElementById('popularRooms');
        if (data.popularRooms && data.popularRooms.length > 0) {
            popularRoomsElement.innerHTML = data.popularRooms.map(room => 
                `<div class="popular-room">${room.name} (${room.bookings})</div>`
            ).join('');
        }
    }
    
    function updateRoomStatus(rooms) {
        const statusCounts = {
            available: 0,
            occupied: 0,
            maintenance: 0
        };
        
        rooms.forEach(room => {
            if (statusCounts.hasOwnProperty(room.status)) {
                statusCounts[room.status]++;
            }
        });
        
        document.getElementById('availableRooms').textContent = statusCounts.available;
        document.getElementById('occupiedRooms').textContent = statusCounts.occupied;
        document.getElementById('maintenanceRooms').textContent = statusCounts.maintenance;
    }
    
    function displayRecentActivity(activities) {
        const activityList = document.getElementById('recentActivity');
        
        if (!activities || activities.length === 0) {
            activityList.innerHTML = '<div class="no-activity">No recent activity</div>';
            return;
        }
        
        activityList.innerHTML = activities.map(activity => `
            <div class="activity-item ${activity.type}">
                <div class="activity-icon">
                    <i class="fas ${getActivityIcon(activity.type)}"></i>
                </div>
                <div class="activity-content">
                    <div class="activity-text">${activity.description}</div>
                    <div class="activity-time">${formatActivityTime(activity.created_at)}</div>
                </div>
            </div>
        `).join('');
    }
    
    function getActivityIcon(type) {
        const icons = {
            booking: 'fa-calendar-plus',
            cancellation: 'fa-times-circle',
            payment: 'fa-credit-card',
            user: 'fa-user-plus',
            room: 'fa-music'
        };
        return icons[type] || 'fa-info-circle';
    }
    
    function formatActivityTime(timestamp) {
        const date = new Date(timestamp);
        const now = new Date();
        const diff = now - date;
        
        if (diff < 60000) return 'Just now';
        if (diff < 3600000) return Math.floor(diff / 60000) + ' minutes ago';
        if (diff < 86400000) return Math.floor(diff / 3600000) + ' hours ago';
        return Math.floor(diff / 86400000) + ' days ago';
    }
    
    function switchSection(section) {
        // Update navigation
        document.querySelectorAll('.admin-nav-link').forEach(link => {
            link.classList.remove('active');
        });
        document.querySelector(`[href="#${section}"]`).classList.add('active');
        
        // Show/hide sections
        document.querySelectorAll('.admin-section').forEach(sec => {
            sec.classList.remove('active');
        });
        document.getElementById(section).classList.add('active');
        
        currentSection = section;
        
        // Load section-specific data
        loadSectionData(section);
    }
    
    async function loadSectionData(section) {
        switch (section) {
            case 'bookings':
                await loadBookingsData();
                break;
            case 'rooms':
                await loadRoomsData();
                break;
            case 'users':
                await loadUsersData();
                break;
            case 'reports':
                await loadReportsData();
                break;
        }
    }
    
    async function loadBookingsData() {
        // Implementation for loading bookings data
        console.log('Loading bookings data...');
    }
    
    async function loadRoomsData() {
        // Implementation for loading rooms data
        console.log('Loading rooms data...');
    }
    
    async function loadUsersData() {
        // Implementation for loading users data
        console.log('Loading users data...');
    }
    
    async function loadReportsData() {
        // Implementation for loading reports data
        console.log('Loading reports data...');
    }
    
    async function refreshAllData() {
        showLoading();
        try {
            await initializeDashboard();
            if (currentSection !== 'overview') {
                await loadSectionData(currentSection);
            }
            showSuccess('Data refreshed successfully');
        } catch (error) {
            console.error('Refresh error:', error);
            showError('Failed to refresh data');
        } finally {
            hideLoading();
        }
    }
    
    function showLoading() {
        document.getElementById('loadingOverlay').classList.remove('hidden');
    }
    
    function hideLoading() {
        document.getElementById('loadingOverlay').classList.add('hidden');
    }
    
    function showError(message) {
        // Implement toast notification
        alert(message);
    }
    
    function showSuccess(message) {
        // Implement toast notification
        alert(message);
    }
});
</script>