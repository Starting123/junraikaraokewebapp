<!DOCTYPE html>
<html>
<head>
    <title>API Tester</title>
    <meta charset="utf-8">
    <link rel="stylesheet" href="/css/apiTester.css">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
</head>
<body>
    <div class="container">
        <h1>API Tester</h1>

        <!-- Rooms API Tests -->
        <div class="api-section">
            <h2>Rooms API</h2>
            
            <!-- GET /api/rooms -->
            <div class="endpoint-test">
                <h3>GET All Rooms</h3>
                <div class="row">
                    <div class="col-md-12">
                        <div class="btn-group">
                            <button onclick="testGetRooms()" class="btn btn-primary">
                                <i class="glyphicon glyphicon-refresh"></i> Test GET /api/rooms
                            </button>
                            <button onclick="clearResult('getRoomsResult')" class="btn btn-default">
                                <i class="glyphicon glyphicon-remove"></i> Clear
                            </button>
                        </div>
                    </div>
                </div>
                <div class="row mt-3">
                    <div class="col-md-12">
                        <div class="panel panel-default">
                            <div class="panel-heading">
                                <span class="label label-info" id="requestTime"></span>
                                Response
                            </div>
                            <div class="panel-body">
                                <div id="loadingIndicator" style="display: none;">
                                    <div class="text-center">
                                        <i class="glyphicon glyphicon-refresh spinning"></i> Loading...
                                    </div>
                                </div>
                                <pre id="getRoomsResult" class="result"></pre>
                            </div>
                            <div class="panel-footer">
                                <small id="responseStatus"></small>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- POST /api/rooms -->
            <div class="endpoint-test">
                <h3>Create Room</h3>
                <form id="createRoomForm" onsubmit="testCreateRoom(event)">
                    <input type="text" name="name" placeholder="Room Name" required>
                    <select name="type_id" required>
                        <option value="1">ห้องเล็ก</option>
                        <option value="2">ห้องกลาง</option>
                        <option value="3">ห้องใหญ่</option>
                    </select>
                    <input type="number" name="capacity" placeholder="Capacity">
                    <button type="submit" class="btn btn-success">Test POST /api/rooms</button>
                </form>
                <pre id="createRoomResult" class="result"></pre>
            </div>

            <!-- GET /api/rooms/search -->
            <div class="endpoint-test">
                <h3>Search Rooms</h3>
                <form id="searchRoomForm" onsubmit="testSearchRooms(event)">
                    <input type="text" name="q" placeholder="Search Query">
                    <select name="status">
                        <option value="">All Status</option>
                        <option value="available">Available</option>
                        <option value="occupied">Occupied</option>
                    </select>
                    <button type="submit" class="btn btn-info">Test GET /api/rooms/search</button>
                </form>
                <pre id="searchRoomsResult" class="result"></pre>
            </div>
        </div>

        <!-- Auth API Tests -->
        <div class="api-section">
            <h2>Auth API</h2>
            
            <!-- POST /api/users/login -->
            <div class="endpoint-test">
                <h3>Login</h3>
                <form id="loginForm" onsubmit="testLogin(event)">
                    <input type="text" name="email" placeholder="Email" required>
                    <input type="password" name="password" placeholder="Password" required>
                    <button type="submit" class="btn btn-primary">Test POST /api/users/login</button>
                </form>
                <pre id="loginResult" class="result"></pre>
            </div>

            <!-- POST /api/users/register -->
            <div class="endpoint-test">
                <h3>Register</h3>
                <form id="registerForm" onsubmit="testRegister(event)">
                    <input type="text" name="name" placeholder="Name" required>
                    <input type="email" name="email" placeholder="Email" required>
                    <input type="password" name="password" placeholder="Password" required>
                    <button type="submit" class="btn btn-success">Test POST /api/users/register</button>
                </form>
                <pre id="registerResult" class="result"></pre>
            </div>
        </div>
    </div>

    <style>
        .spinning {
            animation: spin 1s infinite linear;
        }
        @keyframes spin {
            from { transform: rotate(0deg); }
            to { transform: rotate(360deg); }
        }
        .endpoint-test {
            margin-bottom: 30px;
            padding: 15px;
            border: 1px solid #ddd;
            border-radius: 4px;
        }
        .result {
            max-height: 400px;
            overflow-y: auto;
        }
    </style>

    <script>
        // Helper function
        function displayResult(elementId, data) {
            document.getElementById(elementId).textContent = JSON.stringify(data, null, 2);
        }

        // Room API Tests
        async function testGetRooms() {
            const resultEl = document.getElementById('getRoomsResult');
            const loadingEl = document.getElementById('loadingIndicator');
            const statusEl = document.getElementById('responseStatus');
            const timeEl = document.getElementById('requestTime');

            try {
                // แสดง loading
                loadingEl.style.display = 'block';
                resultEl.style.display = 'none';
                
                const startTime = performance.now();
                const response = await fetch('/api/rooms');
                const data = await response.json();
                const endTime = performance.now();
                
                // ซ่อน loading
                loadingEl.style.display = 'none';
                resultEl.style.display = 'block';

                // แสดงผลลัพธ์
                const duration = (endTime - startTime).toFixed(2);
                const result = {
                    status: response.status,
                    statusText: response.statusText,
                    duration: `${duration}ms`,
                    timestamp: new Date().toLocaleString(),
                    data: data
                };

                displayResult('getRoomsResult', result);
                timeEl.textContent = `${duration}ms`;
                statusEl.textContent = `Status: ${response.status} ${response.statusText}`;
                
                // แสดงสีตามสถานะ
                statusEl.className = response.ok ? 'text-success' : 'text-danger';

            } catch (error) {
                loadingEl.style.display = 'none';
                resultEl.style.display = 'block';
                
                displayResult('getRoomsResult', {
                    status: 'error',
                    timestamp: new Date().toLocaleString(),
                    message: error.message,
                    details: error.toString()
                });
                
                statusEl.textContent = `Error: ${error.message}`;
                statusEl.className = 'text-danger';
            }
        }

        async function testCreateRoom(event) {
            event.preventDefault();
            try {
                const formData = new FormData(event.target);
                const response = await fetch('/api/rooms', {
                    method: 'POST',
                    headers: {'Content-Type': 'application/json'},
                    body: JSON.stringify(Object.fromEntries(formData))
                });
                const data = await response.json();
                displayResult('createRoomResult', data);
            } catch (error) {
                displayResult('createRoomResult', {error: error.message});
            }
        }

        async function testSearchRooms(event) {
            event.preventDefault();
            try {
                const formData = new FormData(event.target);
                const params = new URLSearchParams(formData);
                const response = await fetch(`/api/rooms/search?${params}`);
                const data = await response.json();
                displayResult('searchRoomsResult', data);
            } catch (error) {
                displayResult('searchRoomsResult', {error: error.message});
            }
        }

        // Auth API Tests
        async function testLogin(event) {
            event.preventDefault();
            try {
                const formData = new FormData(event.target);
                const response = await fetch('/api/users/login', {
                    method: 'POST',
                    headers: {'Content-Type': 'application/json'},
                    body: JSON.stringify(Object.fromEntries(formData))
                });
                const data = await response.json();
                displayResult('loginResult', data);
            } catch (error) {
                displayResult('loginResult', {error: error.message});
            }
        }

        async function testRegister(event) {
            event.preventDefault();
            try {
                const formData = new FormData(event.target);
                const response = await fetch('/api/users/register', {
                    method: 'POST',
                    headers: {'Content-Type': 'application/json'},
                    body: JSON.stringify(Object.fromEntries(formData))
                });
                const data = await response.json();
                displayResult('registerResult', data);
            } catch (error) {
                displayResult('registerResult', {error: error.message});
            }
        }

        function clearResult(elementId) {
            document.getElementById(elementId).textContent = '';
        }
    </script>
</body>
</html>
