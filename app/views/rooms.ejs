<!DOCTYPE html>
<html lang="th">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>จัดการห้องคาราโอเกะ - Junrai Karaoke</title>
    <link rel="stylesheet" href="/stylesheets/global.css">
    <link rel="stylesheet" href="/stylesheets/rooms.css">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
</head>
<body>
    <!-- Navigation -->
    <nav class="navbar">
        <div class="container">
            <div style="display: flex; justify-content: space-between; align-items: center; width: 100%;">
                <a href="/" class="navbar-brand">
                    <i class="fas fa-microphone-alt"></i>
                    Junrai Karaoke
                </a>
                <ul class="navbar-nav">
                    <li><a href="/" class="nav-link">หน้าหลัก</a></li>
                    <li><a href="/rooms" class="nav-link active">ห้องคาราโอเกะ</a></li>
                    <li><a href="/bookings" class="nav-link">การจอง</a></li>
                    <li><a href="/contact" class="nav-link">ติดต่อเรา</a></li>
                    <li><a href="/dashboard" class="nav-link" id="dashboardLink" style="display: none;">แดชบอร์ด</a></li>
                    <li><a href="/admin" class="nav-link" id="adminLink" style="display: none;">ผู้ดูแลระบบ</a></li>
                    <li><a href="/auth" class="nav-link" id="authLink" style="display: none;">เข้าสู่ระบบ</a></li>
                    <li><button class="btn btn-outline" id="logoutBtn" style="display: none;">ออกจากระบบ</button></li>
                </ul>
            </div>
        </div>
    </nav>

    <div class="container mt-4">
        <!-- Page Header -->
        <div class="page-header">
            <h1><i class="fas fa-door-open"></i> จัดการห้องคาราโอเกะ</h1>
            <p>ดู เพิ่ม แก้ไข และจัดการห้องคาราโอเกะทั้งหมด</p>
        </div>

        <!-- Controls Section -->
        <div class="controls-section">
            <div class="search-filters">
                <div class="search-box">
                    <i class="fas fa-search"></i>
                    <input type="text" id="searchInput" placeholder="ค้นหาห้อง...">
                </div>
                
                <div class="filter-group">
                    <select id="statusFilter" class="form-select">
                        <option value="">สถานะทั้งหมด</option>
                        <option value="available">ว่าง</option>
                        <option value="occupied">ไม่ว่าง</option>
                    </select>
                    
                    <select id="typeFilter" class="form-select">
                        <option value="">ประเภททั้งหมด</option>
                    </select>
                </div>
            </div>
            
            <button class="btn btn-primary" id="addRoomBtn" style="display: none;">
                <i class="fas fa-plus"></i>
                เพิ่มห้องใหม่
            </button>
        </div>

        <!-- Rooms Grid -->
        <div class="rooms-grid" id="roomsGrid">
            <div class="loading">
                <div class="spinner"></div>
                <p>กำลังโหลดข้อมูลห้อง...</p>
            </div>
        </div>

        <!-- Room Details Modal -->
        <div class="modal-overlay" id="roomModal">
            <div class="modal-content">
                <div class="modal-header">
                    <h3 id="modalTitle">รายละเอียดห้อง</h3>
                    <button class="modal-close" onclick="closeModal()">&times;</button>
                </div>
                <div class="modal-body" id="modalBody">
                    <!-- Content will be loaded here -->
                </div>
            </div>
        </div>

        <!-- Add/Edit Room Modal -->
        <div class="modal-overlay" id="roomFormModal">
            <div class="modal-content">
                <div class="modal-header">
                    <h3 id="formModalTitle">เพิ่มห้องใหม่</h3>
                    <button class="modal-close" onclick="closeFormModal()">&times;</button>
                </div>
                <div class="modal-body">
                    <form id="roomForm">
                        <input type="hidden" id="roomId">
                        
                        <div class="form-group">
                            <label class="form-label">
                                <i class="fas fa-door-open"></i>
                                ชื่อห้อง
                            </label>
                            <input type="text" class="form-control" id="roomName" placeholder="เช่น ห้อง VIP 1" required>
                        </div>
                        
                        <div class="form-group">
                            <label class="form-label">
                                <i class="fas fa-tags"></i>
                                ประเภทห้อง
                            </label>
                            <select class="form-select" id="roomType" required>
                                <option value="">เลือกประเภทห้อง</option>
                            </select>
                        </div>
                        
                        <div class="form-group">
                            <label class="form-label">
                                <i class="fas fa-users"></i>
                                ความจุ (คน)
                            </label>
                            <input type="number" class="form-control" id="roomCapacity" min="1" max="50" placeholder="จำนวนคนที่รองรับได้" required>
                        </div>
                        
                        <div class="form-group">
                            <label class="form-label">
                                <i class="fas fa-info-circle"></i>
                                สถานะ
                            </label>
                            <select class="form-select" id="roomStatus" required>
                                <option value="available">ว่าง</option>
                                <option value="occupied">ไม่ว่าง</option>
                            </select>
                        </div>
                        
                        <div class="form-actions">
                            <button type="button" class="btn btn-secondary" onclick="closeFormModal()">ยกเลิก</button>
                            <button type="submit" class="btn btn-primary">
                                <i class="fas fa-save"></i>
                                บันทึก
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <script>
        // Global variables
        let rooms = [];
        let roomTypes = [];
        let currentUser = null;
        const API_BASE = '/api';

        // Initialize page
        document.addEventListener('DOMContentLoaded', () => {
            checkAuth();
            loadRoomTypes();
            loadRooms();
        });

        // Authentication check
        function checkAuth() {
            const token = localStorage.getItem('token');
            const user = localStorage.getItem('user');
            
            if (token && user) {
                currentUser = JSON.parse(user);
                document.getElementById('authLink').style.display = 'none';
                document.getElementById('logoutBtn').style.display = 'block';
                document.getElementById('dashboardLink').style.display = 'block';
                
                // Show admin controls and admin link
                if (currentUser.role_id === 1) {
                    document.getElementById('addRoomBtn').style.display = 'block';
                    document.getElementById('adminLink').style.display = 'block';
                }
            }
        }

        // Logout function
        function logout() {
            localStorage.removeItem('token');
            localStorage.removeItem('user');
            window.location.reload();
        }

        // Load room types for filters and form
        async function loadRoomTypes() {
            try {
                // For now, use static data since we don't have room_types API
                roomTypes = [
                    { type_id: 1, type_name: 'ห้องธรรมดา' },
                    { type_id: 2, type_name: 'ห้อง VIP' },
                    { type_id: 3, type_name: 'ห้องกลุ่มใหญ่' }
                ];
                
                populateTypeFilters();
            } catch (error) {
                console.error('Error loading room types:', error);
            }
        }

        // Populate type filters
        function populateTypeFilters() {
            const typeFilter = document.getElementById('typeFilter');
            const roomTypeSelect = document.getElementById('roomType');
            
            roomTypes.forEach(type => {
                // Filter dropdown
                const filterOption = document.createElement('option');
                filterOption.value = type.type_id;
                filterOption.textContent = type.type_name;
                typeFilter.appendChild(filterOption);
                
                // Form select
                const formOption = document.createElement('option');
                formOption.value = type.type_id;
                formOption.textContent = type.type_name;
                roomTypeSelect.appendChild(formOption);
            });
        }

        // Load rooms
        async function loadRooms() {
            try {
                const response = await fetch(`${API_BASE}/rooms/roomForm`);
                if (response.ok) {
                    rooms = await response.json();
                    displayRooms(rooms);
                } else {
                    throw new Error('Failed to load rooms');
                }
            } catch (error) {
                console.error('Error loading rooms:', error);
                document.getElementById('roomsGrid').innerHTML = `
                    <div class="error-message">
                        <i class="fas fa-exclamation-triangle"></i>
                        <h3>เกิดข้อผิดพลาด</h3>
                        <p>ไม่สามารถโหลดข้อมูลห้องได้</p>
                        <button class="btn btn-primary" onclick="loadRooms()">ลองอีกครั้ง</button>
                    </div>
                `;
            }
        }

        // Display rooms
        function displayRooms(roomsToShow) {
            const grid = document.getElementById('roomsGrid');
            
            if (roomsToShow.length === 0) {
                grid.innerHTML = `
                    <div class="empty-state">
                        <i class="fas fa-door-closed"></i>
                        <h3>ไม่พบห้องคาราโอเกะ</h3>
                        <p>ยังไม่มีห้องในระบบ หรือลองเปลี่ยนเงื่อนไขการค้นหา</p>
                    </div>
                `;
                return;
            }

            grid.innerHTML = roomsToShow.map(room => `
                <div class="room-card ${room.status}" onclick="viewRoom(${room.room_id})">
                    <div class="room-header">
                        <div class="room-status ${room.status}">
                            <i class="fas ${room.status === 'available' ? 'fa-check-circle' : 'fa-times-circle'}"></i>
                            ${room.status === 'available' ? 'ว่าง' : 'ไม่ว่าง'}
                        </div>
                        ${currentUser && currentUser.role_id === 1 ? `
                        <div class="room-actions">
                            <button class="action-btn edit" onclick="event.stopPropagation(); editRoom(${room.room_id})" title="แก้ไข">
                                <i class="fas fa-edit"></i>
                            </button>
                            <button class="action-btn delete" onclick="event.stopPropagation(); deleteRoom(${room.room_id})" title="ลบ">
                                <i class="fas fa-trash"></i>
                            </button>
                        </div>
                        ` : ''}
                    </div>
                    
                    <div class="room-body">
                        <h3 class="room-name">
                            <i class="fas fa-door-open"></i>
                            ${room.name}
                        </h3>
                        
                        <div class="room-info">
                            <div class="info-item">
                                <i class="fas fa-tags"></i>
                                <span>${room.type_name || 'ไม่ระบุประเภท'}</span>
                            </div>
                            
                            <div class="info-item">
                                <i class="fas fa-users"></i>
                                <span>${room.capacity || 'ไม่ระบุ'} คน</span>
                            </div>
                        </div>
                    </div>
                    
                    <div class="room-footer">
                        <button class="btn ${room.status === 'available' ? 'btn-primary' : 'btn-secondary'}" 
                                ${room.status !== 'available' ? 'disabled' : ''}>
                            <i class="fas ${room.status === 'available' ? 'fa-calendar-plus' : 'fa-ban'}"></i>
                            ${room.status === 'available' ? 'จองห้อง' : 'ไม่ว่าง'}
                        </button>
                    </div>
                </div>
            `).join('');
        }

        // Search rooms
        function searchRooms() {
            const searchTerm = document.getElementById('searchInput').value.toLowerCase();
            const statusFilter = document.getElementById('statusFilter').value;
            const typeFilter = document.getElementById('typeFilter').value;
            
            let filteredRooms = rooms.filter(room => {
                const matchesSearch = room.name.toLowerCase().includes(searchTerm) ||
                                    (room.type_name && room.type_name.toLowerCase().includes(searchTerm));
                const matchesStatus = !statusFilter || room.status === statusFilter;
                const matchesType = !typeFilter || room.type_id == typeFilter;
                
                return matchesSearch && matchesStatus && matchesType;
            });
            
            displayRooms(filteredRooms);
        }

        // Filter rooms
        function filterRooms() {
            searchRooms(); // Use the same logic
        }

        // View room details
        function viewRoom(roomId) {
            const room = rooms.find(r => r.room_id === roomId);
            if (!room) return;
            
            document.getElementById('modalTitle').textContent = `รายละเอียด${room.name}`;
            document.getElementById('modalBody').innerHTML = `
                <div class="room-details">
                    <div class="detail-item">
                        <label>ชื่อห้อง:</label>
                        <span>${room.name}</span>
                    </div>
                    
                    <div class="detail-item">
                        <label>ประเภท:</label>
                        <span>${room.type_name || 'ไม่ระบุ'}</span>
                    </div>
                    
                    <div class="detail-item">
                        <label>ความจุ:</label>
                        <span>${room.capacity || 'ไม่ระบุ'} คน</span>
                    </div>
                    
                    <div class="detail-item">
                        <label>สถานะ:</label>
                        <span class="badge badge-${room.status === 'available' ? 'success' : 'warning'}">
                            ${room.status === 'available' ? 'ว่าง' : 'ไม่ว่าง'}
                        </span>
                    </div>
                    
                    <div class="detail-actions">
                        ${room.status === 'available' ? `
                        <button class="btn btn-primary" onclick="bookRoom(${room.room_id})">
                            <i class="fas fa-calendar-plus"></i>
                            จองห้องนี้
                        </button>
                        ` : ''}
                        
                        ${currentUser && currentUser.role_id === 1 ? `
                        <button class="btn btn-secondary" onclick="editRoom(${room.room_id})">
                            <i class="fas fa-edit"></i>
                            แก้ไข
                        </button>
                        ` : ''}
                    </div>
                </div>
            `;
            
            document.getElementById('roomModal').style.display = 'flex';
        }

        // Show add room modal
        function showAddRoomModal() {
            document.getElementById('formModalTitle').textContent = 'เพิ่มห้องใหม่';
            document.getElementById('roomForm').reset();
            document.getElementById('roomId').value = '';
            document.getElementById('roomFormModal').style.display = 'flex';
        }

        // Edit room
        function editRoom(roomId) {
            const room = rooms.find(r => r.room_id === roomId);
            if (!room) return;
            
            document.getElementById('formModalTitle').textContent = 'แก้ไขห้อง';
            document.getElementById('roomId').value = room.room_id;
            document.getElementById('roomName').value = room.name;
            document.getElementById('roomType').value = room.type_id || '';
            document.getElementById('roomCapacity').value = room.capacity || '';
            document.getElementById('roomStatus').value = room.status;
            
            closeModal();
            document.getElementById('roomFormModal').style.display = 'flex';
        }

        // Delete room
        async function deleteRoom(roomId) {
            const room = rooms.find(r => r.room_id === roomId);
            if (!room) return;
            
            if (!confirm(`คุณต้องการลบ "${room.name}" หรือไม่?`)) return;
            
            try {
                const token = localStorage.getItem('token');
                const response = await fetch(`${API_BASE}/admin/rooms/${roomId}`, {
                    method: 'DELETE',
                    headers: {
                        'Authorization': `Bearer ${token}`
                    }
                });
                
                if (response.ok) {
                    alert('ลบห้องสำเร็จ');
                    loadRooms();
                } else {
                    throw new Error('Failed to delete room');
                }
            } catch (error) {
                console.error('Error deleting room:', error);
                alert('เกิดข้อผิดพลาดในการลบห้อง');
            }
        }

        // Book room
        function bookRoom(roomId) {
            if (!currentUser) {
                alert('กรุณาเข้าสู่ระบบก่อนทำการจอง');
                window.location.href = '/auth';
                return;
            }
            
            window.location.href = `/bookings?room=${roomId}`;
        }

        // Handle room form submission
        document.getElementById('roomForm').addEventListener('submit', async (e) => {
            e.preventDefault();
            
            const roomId = document.getElementById('roomId').value;
            const roomData = {
                name: document.getElementById('roomName').value,
                type_id: parseInt(document.getElementById('roomType').value),
                capacity: parseInt(document.getElementById('roomCapacity').value),
                status: document.getElementById('roomStatus').value
            };
            
            try {
                const token = localStorage.getItem('token');
                const url = roomId ? 
                    `${API_BASE}/admin/rooms/${roomId}` : 
                    `${API_BASE}/admin/rooms`;
                const method = roomId ? 'PUT' : 'POST';
                
                const response = await fetch(url, {
                    method: method,
                    headers: {
                        'Content-Type': 'application/json',
                        'Authorization': `Bearer ${token}`
                    },
                    body: JSON.stringify(roomData)
                });
                
                if (response.ok) {
                    alert(roomId ? 'แก้ไขห้องสำเร็จ' : 'เพิ่มห้องสำเร็จ');
                    closeFormModal();
                    loadRooms();
                } else {
                    const error = await response.json();
                    throw new Error(error.error || 'Operation failed');
                }
            } catch (error) {
                console.error('Error saving room:', error);
                alert(`เกิดข้อผิดพลาด: ${error.message}`);
            }
        });

        // Modal functions
        function closeModal() {
            document.getElementById('roomModal').style.display = 'none';
        }

        function closeFormModal() {
            document.getElementById('roomFormModal').style.display = 'none';
        }

        // Close modals when clicking outside
        document.getElementById('roomModal').addEventListener('click', (e) => {
            if (e.target === document.getElementById('roomModal')) {
                closeModal();
            }
        });

        document.getElementById('roomFormModal').addEventListener('click', (e) => {
            if (e.target === document.getElementById('roomFormModal')) {
                closeFormModal();
            }
        });
    </script>
</body>
</html>