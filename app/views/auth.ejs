<!DOCTYPE html>
<html lang="th">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>เข้าสู่ระบบ - Junrai Karaoke</title>
    <link rel="stylesheet" href="/stylesheets/global.css">
    <link rel="stylesheet" href="/stylesheets/auth.css">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
</head>
<body>
    <!-- Navigation -->
    <nav class="navbar">
        <div class="container">
            <div style="display: flex; justify-content: space-between; align-items: center; width: 100%;">
                <a href="/" class="navbar-brand">
                    <i class="fas fa-microphone-alt"></i>
                    Junrai Karaoke
                </a>
                <ul class="navbar-nav">
                    <li><a href="/" class="nav-link">หน้าหลัก</a></li>
                    <li><a href="/rooms" class="nav-link">ห้องคาราโอเกะ</a></li>
                    <li><a href="/bookings" class="nav-link">การจอง</a></li>
                    <li><a href="/contact" class="nav-link">ติดต่อเรา</a></li>
                    <li><a href="/dashboard" class="nav-link" id="dashboardLink" style="display: none;">แดชบอร์ด</a></li>
                    <li><a href="/admin" class="nav-link" id="adminLink" style="display: none;">ผู้ดูแลระบบ</a></li>
                    <li><a href="/auth" class="nav-link active" id="authLink">เข้าสู่ระบบ</a></li>
                    <li><button class="btn btn-outline" id="logoutBtn" style="display: none;">ออกจากระบบ</button></li>
                </ul>
            </div>
        </div>
    </nav>

    <div class="auth-container">
        <div class="auth-wrapper">
            <!-- Login Form -->
            <div class="auth-card" id="loginCard">
                <div class="auth-header">
                    <h2><i class="fas fa-sign-in-alt"></i> เข้าสู่ระบบ</h2>
                    <p>ยินดีต้อนรับกลับสู่ Junrai Karaoke</p>
                </div>
                
                <form id="loginForm" class="auth-form">
                    <div class="form-group">
                        <label class="form-label">
                            <i class="fas fa-envelope"></i> อีเมล
                        </label>
                        <input type="email" class="form-control" id="loginEmail" name="email" placeholder="กรุณาใส่อีเมลของคุณ" required>
                    </div>
                    
                    <div class="form-group">
                        <label class="form-label">
                            <i class="fas fa-lock"></i> รหัสผ่าน
                        </label>
                        <div class="password-input">
                            <input type="password" class="form-control" id="loginPassword" name="password" placeholder="กรุณาใส่รหัสผ่าน" required>
                            <button type="button" class="password-toggle" data-target="loginPassword">
                                <i class="fas fa-eye"></i>
                            </button>
                        </div>
                    </div>
                    
                    <button type="submit" class="btn btn-primary auth-btn">
                        <i class="fas fa-sign-in-alt"></i>
                        เข้าสู่ระบบ
                    </button>
                    
                    <div class="auth-divider">
                        <span>หรือ</span>
                    </div>
                    
                    <button type="button" class="btn btn-outline auth-btn" id="showRegisterBtn">
                        <i class="fas fa-user-plus"></i>
                        สมัครสมาชิกใหม่
                    </button>
                </form>
                
                <div class="auth-result" id="loginResult"></div>
            </div>

            <!-- Register Form -->
            <div class="auth-card" id="registerCard" style="display: none;">
                <div class="auth-header">
                    <h2><i class="fas fa-user-plus"></i> สมัครสมาชิก</h2>
                    <p>เริ่มต้นการใช้งาน Junrai Karaoke</p>
                </div>
                
                <form id="registerForm" class="auth-form">
                    <div class="form-group">
                        <label class="form-label">
                            <i class="fas fa-user"></i> ชื่อ-นามสกุล
                        </label>
                        <input type="text" class="form-control" id="registerName" placeholder="กรุณาใส่ชื่อ-นามสกุล" required>
                    </div>
                    
                    <div class="form-group">
                        <label class="form-label">
                            <i class="fas fa-envelope"></i> อีเมล
                        </label>
                        <input type="email" class="form-control" id="registerEmail" placeholder="กรุณาใส่อีเมลของคุณ" required>
                    </div>
                    
                    <div class="form-group">
                        <label class="form-label">
                            <i class="fas fa-lock"></i> รหัสผ่าน
                        </label>
                        <div class="password-input">
                            <input type="password" class="form-control" id="registerPassword" placeholder="กรุณาใส่รหัสผ่าน (อย่างน้อย 6 ตัวอักษร)" required minlength="6">
                            <button type="button" class="password-toggle" data-target="registerPassword">
                                <i class="fas fa-eye"></i>
                            </button>
                        </div>
                    </div>
                    
                    <div class="form-group">
                        <label class="form-label">
                            <i class="fas fa-lock"></i> ยืนยันรหัสผ่าน
                        </label>
                        <div class="password-input">
                            <input type="password" class="form-control" id="confirmPassword" placeholder="กรุณายืนยันรหัสผ่าน" required>
                            <button type="button" class="password-toggle" data-target="confirmPassword">
                                <i class="fas fa-eye"></i>
                            </button>
                        </div>
                    </div>
                    
                    <button type="submit" class="btn btn-primary auth-btn">
                        <i class="fas fa-user-plus"></i>
                        สมัครสมาชิก
                    </button>
                    
                    <div class="auth-divider">
                        <span>หรือ</span>
                    </div>
                    
                    <button type="button" class="btn btn-outline auth-btn" id="showLoginBtn">
                        <i class="fas fa-sign-in-alt"></i>
                        เข้าสู่ระบบ
                    </button>
                </form>
                
                <div class="auth-result" id="registerResult"></div>
            </div>
        </div>
    </div>

    <!-- Loading Overlay -->
    <div class="loading-overlay" id="loadingOverlay">
        <div class="loading-content">
            <div class="spinner"></div>
            <p>กำลังดำเนินการ...</p>
        </div>
    </div>

    <script>
        // Global variables
        let currentUser = null;
        const API_BASE = '/api';
        let isCheckingAuth = false;
        let isRedirecting = false; // Prevent multiple redirects

        // Toggle between login and register forms
        function showLogin() {
            document.getElementById('loginCard').style.display = 'block';
            document.getElementById('registerCard').style.display = 'none';
            clearResults();
        }

        function showRegister() {
            document.getElementById('loginCard').style.display = 'none';
            document.getElementById('registerCard').style.display = 'block';
            clearResults();
        }

        // Toggle password visibility
        function togglePassword(inputId) {
            const input = document.getElementById(inputId);
            const icon = input.nextElementSibling.querySelector('i');
            
            if (input.type === 'password') {
                input.type = 'text';
                icon.className = 'fas fa-eye-slash';
            } else {
                input.type = 'password';
                icon.className = 'fas fa-eye';
            }
        }

        // Setup event listeners for password toggle buttons
        function setupPasswordToggles() {
            const toggleButtons = document.querySelectorAll('.password-toggle');
            toggleButtons.forEach(button => {
                button.addEventListener('click', function() {
                    const targetId = this.getAttribute('data-target');
                    togglePassword(targetId);
                });
            });
        }

        // Setup event listeners for form switches
        function setupFormSwitches() {
            const showRegisterBtn = document.getElementById('showRegisterBtn');
            const showLoginBtn = document.getElementById('showLoginBtn');
            const logoutBtn = document.getElementById('logoutBtn');
            
            if (showRegisterBtn) {
                showRegisterBtn.addEventListener('click', showRegister);
            }
            
            if (showLoginBtn) {
                showLoginBtn.addEventListener('click', showLogin);
            }

            if (logoutBtn) {
                logoutBtn.addEventListener('click', logout);
            }
        }

        // Logout function
        function logout() {
            localStorage.removeItem('token');
            localStorage.removeItem('user');
            window.location.reload();
        }

        // Show/Hide loading
        function showLoading() {
            document.getElementById('loadingOverlay').style.display = 'flex';
        }

        function hideLoading() {
            document.getElementById('loadingOverlay').style.display = 'none';
        }

        // Clear results
        function clearResults() {
            document.getElementById('loginResult').innerHTML = '';
            document.getElementById('registerResult').innerHTML = '';
        }

        // Show result message
        function showResult(elementId, message, type = 'info') {
            const element = document.getElementById(elementId);
            const iconClass = {
                'success': 'fas fa-check-circle',
                'error': 'fas fa-exclamation-circle',
                'warning': 'fas fa-exclamation-triangle',
                'info': 'fas fa-info-circle'
            }[type];

            element.innerHTML = `
                <div class="alert alert-${type}">
                    <i class="${iconClass}"></i>
                    ${message}
                </div>
            `;
        }

        // Login form submission
        document.getElementById('loginForm').addEventListener('submit', async (e) => {
            e.preventDefault();
            
            const email = document.getElementById('loginEmail').value;
            const password = document.getElementById('loginPassword').value;
            
            if (!email || !password) {
                showResult('loginResult', 'กรุณากรอกข้อมูลให้ครบถ้วน', 'warning');
                return;
            }

            showLoading();
            clearResults();

            try {
                const response = await fetch(`${API_BASE}/auth/login`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ email, password })
                });

                const data = await response.json();

                if (response.ok) {
                    // Store token and user data
                    localStorage.setItem('token', data.token);
                    localStorage.setItem('user', JSON.stringify(data.user));
                    
                    showResult('loginResult', 
                        `เข้าสู่ระบบสำเร็จ! ยินดีต้อนรับ ${data.user.name}`, 'success');
                    
                    // Prevent multiple redirects
                    if (isRedirecting) {
                        console.log('Redirect already in progress, skipping');
                        return;
                    }
                    
                    isRedirecting = true;
                    console.log('Login successful - will auto-redirect after showing success message');
                    const redirectUrl = data.redirectUrl || (data.user.role_id === 1 ? '/admin' : '/dashboard');
                    
                    // Show success message first
                    const loginResult = document.getElementById('loginResult');
                    if (loginResult) {
                        loginResult.innerHTML = `
                            <div class="success-message">
                                <i class="fas fa-check-circle"></i>
                                <p>เข้าสู่ระบบสำเร็จ! ยินดีต้อนรับ ${data.user.name}</p>
                                <p class="redirect-countdown">กำลังเข้าสู่ระบบ...</p>
                            </div>
                        `;
                        loginResult.style.display = 'block';
                    }
                    
                    // Auto-redirect after showing success message
                    setTimeout(() => {
                        console.log('Auto-redirecting to:', redirectUrl);
                        window.location.href = redirectUrl;
                    }, 2000);
                } else {
                    showResult('loginResult', 
                        data.error || 'อีเมลหรือรหัสผ่านไม่ถูกต้อง', 'error');
                }
            } catch (error) {
                console.error('Login error:', error);
                showResult('loginResult', 'เกิดข้อผิดพลาดในการเข้าสู่ระบบ', 'error');
            } finally {
                hideLoading();
            }
        });

        // Register form submission
        document.getElementById('registerForm').addEventListener('submit', async (e) => {
            e.preventDefault();
            
            const name = document.getElementById('registerName').value;
            const email = document.getElementById('registerEmail').value;
            const password = document.getElementById('registerPassword').value;
            const confirmPassword = document.getElementById('confirmPassword').value;
            
            // Validation
            if (!name || !email || !password || !confirmPassword) {
                showResult('registerResult', 'กรุณากรอกข้อมูลให้ครบถ้วน', 'warning');
                return;
            }

            if (password.length < 6) {
                showResult('registerResult', 'รหัสผ่านต้องมีอย่างน้อย 6 ตัวอักษร', 'warning');
                return;
            }

            if (password !== confirmPassword) {
                showResult('registerResult', 'รหัสผ่านไม่ตรงกัน', 'warning');
                return;
            }

            showLoading();
            clearResults();

            try {
                const response = await fetch(`${API_BASE}/auth/register`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ name, email, password })
                });

                const data = await response.json();

                if (response.ok) {
                    showResult('registerResult', 
                        'สมัครสมาชิกสำเร็จ! กรุณาเข้าสู่ระบบ', 'success');
                    
                    // Switch to login form after 2 seconds
                    setTimeout(() => {
                        showLogin();
                        document.getElementById('loginEmail').value = email;
                    }, 2000);
                } else {
                    if (data.errors && data.errors.length > 0) {
                        const errorMessages = data.errors.map(err => err.msg).join(', ');
                        showResult('registerResult', errorMessages, 'error');
                    } else {
                        showResult('registerResult', 
                            data.error || 'เกิดข้อผิดพลาดในการสมัครสมาชิก', 'error');
                    }
                }
            } catch (error) {
                console.error('Register error:', error);
                showResult('registerResult', 'เกิดข้อผิดพลาดในการสมัครสมาชิก', 'error');
            } finally {
                hideLoading();
            }
        });

        // DISABLED: Auto redirect was causing infinite loops with server middleware
        // Check if user is already logged in - DISABLED TO PREVENT REDIRECT LOOPS
        async function checkAuth() {
            console.log('checkAuth called but DISABLED to prevent redirect loops');
            return; // Exit early to prevent any redirects
            
            // Prevent multiple simultaneous auth checks
            if (isCheckingAuth) {
                return;
            }
            
            isCheckingAuth = true;
            
            try {
                const token = localStorage.getItem('token');
                const user = localStorage.getItem('user');
                
                if (token && user) {
                    // Verify token is still valid by making a test API call
                    const response = await fetch('/api/bookings', {
                        method: 'GET',
                        headers: {
                            'Authorization': `Bearer ${token}`
                        }
                    });
                    
                    if (response.ok) {
                        // DISABLED: Token is valid, redirect to appropriate dashboard
                        console.log('Auth check would redirect but DISABLED');
                        // const userData = JSON.parse(user);
                        // window.location.href = userData.role_id === 1 ? '/admin' : '/dashboard';
                    } else {
                        // Token is invalid, clear localStorage
                        console.log('Token invalid, clearing localStorage');
                        localStorage.removeItem('token');
                        localStorage.removeItem('user');
                    }
                } 
            } catch (error) {
                console.error('Auth check failed:', error);
                // Clear invalid tokens
                localStorage.removeItem('token');
                localStorage.removeItem('user');
            } finally {
                isCheckingAuth = false;
            }
        }

        // Initialize page
        document.addEventListener('DOMContentLoaded', () => {
            // Only check auth once on page load with a small delay
            setTimeout(checkAuth, 500);
            setupPasswordToggles();
            setupFormSwitches();
        });
        
        // Only check auth when page becomes visible (user switches back to tab)
        document.addEventListener('visibilitychange', () => {
            if (!document.hidden && !isCheckingAuth) {
                setTimeout(checkAuth, 1000);
            }
        });
    </script>
</body>
</html>