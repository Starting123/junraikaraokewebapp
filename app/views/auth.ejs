<!DOCTYPE html>
<html lang="th">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö - Junrai Karaoke</title>
    <link rel="stylesheet" href="/css/global.css">
    <link rel="stylesheet" href="/css/auth.css">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
</head>
<body>
    <!-- Navigation -->
    <nav class="navbar">
        <div class="container">
            <div class="navbar-content">
                <a href="/" class="navbar-brand">
                    <i class="fas fa-microphone-alt"></i>
                    Junrai Karaoke
                </a>
                
                <div class="navbar-main">
                    <ul class="navbar-nav">
                        <li><a href="/" class="nav-link">‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å</a></li>
                        <li><a href="/rooms" class="nav-link">‡∏´‡πâ‡∏≠‡∏á‡∏Ñ‡∏≤‡∏£‡∏≤‡πÇ‡∏≠‡πÄ‡∏Å‡∏∞</a></li>
                        <li><a href="/bookings" class="nav-link" id="bookingsLink" style="display: none;">‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á</a></li>
                        <li><a href="/contact" class="nav-link">‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÄ‡∏£‡∏≤</a></li>
                        <li><a href="/auth" class="nav-link" id="authLink">‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö</a></li>
                        <li><button class="btn btn-outline" onclick="logout()" id="logoutBtn" style="display: none;">‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö</button></li>
                    </ul>
                    
                    <!-- Store Hours Info -->
                </div>
            </div>
        </div>
    </nav>

    <div class="auth-container">
        <div class="auth-wrapper">
            <!-- Login Form -->
            <div class="auth-card" id="loginCard">
                <div class="auth-header">
                    <h2><i class="fas fa-sign-in-alt"></i> ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö</h2>
                    <p>‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏™‡∏π‡πà Junrai Karaoke</p>
                </div>
                
                <form id="loginForm" class="auth-form" action="/auth/login" method="POST">
                    <div class="form-group">
                        <label class="form-label">
                            <i class="fas fa-envelope"></i> ‡∏≠‡∏µ‡πÄ‡∏°‡∏•
                        </label>
                        <input type="email" class="form-control" name="email" placeholder="‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì" required>
                    </div>
                    
                    <div class="form-group">
                        <label class="form-label">
                            <i class="fas fa-lock"></i> ‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô
                        </label>
                        <div class="password-input">
                            <input type="password" class="form-control" name="password" placeholder="‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô" required>
                            <button type="button" class="password-toggle" onclick="togglePassword('loginPassword')">
                                <i class="fas fa-eye"></i>
                            </button>
                        </div>
                    </div>

                    <div class="form-group" style="text-align:right;">
                        <a href="/auth/forgot" class="forgot-link" style="color:#f7b731;font-weight:bold;text-decoration:none;padding:4px 12px;border-radius:6px;transition:background 0.2s;">‡∏•‡∏∑‡∏°‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô?</a>
                    </div>
                    
                    <button type="submit" class="btn btn-primary auth-btn">
                        <i class="fas fa-sign-in-alt"></i>
                        ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö
                    </button>
                    
                    <div class="auth-divider">
                        <span>‡∏´‡∏£‡∏∑‡∏≠</span>
                    </div>
                    
                    <a href="/auth/register" class="btn btn-outline auth-btn">
                        <i class="fas fa-user-plus"></i>
                        ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÉ‡∏´‡∏°‡πà
                    </a>
                </form>
                
                <div class="auth-result" id="loginResult"></div>
            </div>
        </div>
    </div>

    <!-- Loading Overlay -->
    <div class="loading-overlay" id="loadingOverlay">
        <div class="loading-content">
            <div class="spinner"></div>
            <p>‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£...</p>
        </div>
    </div>

    <script>
        // Global variables
        let currentUser = null;
        const API_BASE = '/api';

        // Toggle password visibility
        function togglePassword(inputId) {
            const input = document.getElementById(inputId);
            const icon = input.nextElementSibling.querySelector('i');
            
            if (input.type === 'password') {
                input.type = 'text';
                icon.className = 'fas fa-eye-slash';
            } else {
                input.type = 'password';
                icon.className = 'fas fa-eye';
            }
        }

        // Show/Hide loading
        function showLoading() {
            document.getElementById('loadingOverlay').style.display = 'flex';
        }

        function hideLoading() {
            document.getElementById('loadingOverlay').style.display = 'none';
        }

        // Show result message
        function showResult(elementId, message, type = 'info') {
            const element = document.getElementById(elementId);
            const iconClass = {
                'success': 'fas fa-check-circle',
                'error': 'fas fa-exclamation-circle',
                'warning': 'fas fa-exclamation-triangle',
                'info': 'fas fa-info-circle'
            }[type];

            element.innerHTML = `
                <div class="alert alert-${type}">
                    <i class="${iconClass}"></i>
                    ${message}
                </div>
            `;
        }

        // Login form submission
        document.getElementById('loginForm').addEventListener('submit', async (e) => {
            e.preventDefault();
            
            const email = document.getElementById('loginEmail').value;
            const password = document.getElementById('loginPassword').value;
            
            if (!email || !password) {
                showResult('loginResult', '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô', 'warning');
                return;
            }

            showLoading();
            clearResults();

            try {
                const response = await fetch(`${API_BASE}/auth/login`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ email, password })
                });

                const data = await response.json();

                if (response.ok) {
                    // Store token and user data
                    localStorage.setItem('token', data.token);
                    localStorage.setItem('user', JSON.stringify(data.user));
                    
                    showResult('loginResult', 
                        `‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! ‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö ${data.user.name}`, 'success');
                    
                    // Redirect after 2 seconds
                    setTimeout(() => {
                        window.location.href = data.user.role_id === 1 ? '/admin' : '/dashboard';
                    }, 2000);
                } else {
                    showResult('loginResult', 
                        data.error || '‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏´‡∏£‡∏∑‡∏≠‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á', 'error');
                }
            } catch (error) {
                console.error('Login error:', error);
                showResult('loginResult', '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö', 'error');
            } finally {
                hideLoading();
            }
        });

        // Check if user is already logged in
        function checkAuth() {
            const token = localStorage.getItem('token');
            const user = localStorage.getItem('user');
            
            if (token && user) {
                // Redirect to appropriate dashboard
                const userData = JSON.parse(user);
                window.location.href = userData.role_id === 1 ? '/admin' : '/dashboard';
            }
        }

        // Store Hours Management
        function updateStoreStatus() {
            const now = new Date();
            const currentDay = now.getDay(); // 0 = Sunday, 1 = Monday, etc.
            const currentHour = now.getHours();
            const currentMinute = now.getMinutes();
            const currentTime = currentHour + (currentMinute / 60);
            
            const statusElement = document.getElementById('statusText');
            const hoursInfo = document.getElementById('storeHoursInfo');
            
            // Store hours: 11:00 - 21:00, Tuesday - Sunday (Closed Monday)
            const openTime = 11; // 11:00
            const closeTime = 21; // 21:00
            const isMonday = currentDay === 1;
            const isOpenDays = currentDay >= 2 || currentDay === 0; // Tuesday-Sunday
            const isWithinHours = currentTime >= openTime && currentTime < closeTime;
            
            if (isMonday) {
                statusElement.textContent = 'üî¥ ‡∏õ‡∏¥‡∏î (‡∏ß‡∏±‡∏ô‡∏´‡∏¢‡∏∏‡∏î)';
                statusElement.className = 'status-text status-closed';
                hoursInfo.classList.add('store-closed');
            } else if (isOpenDays && isWithinHours) {
                const hoursLeft = closeTime - currentTime;
                const hoursText = hoursLeft > 1 ? `${Math.floor(hoursLeft)} ‡∏ä‡∏°` : `${Math.floor(hoursLeft * 60)} ‡∏ô‡∏≤‡∏ó‡∏µ`;
                statusElement.textContent = `üü¢ ‡πÄ‡∏õ‡∏¥‡∏î (‡∏≠‡∏µ‡∏Å ${hoursText})`;
                statusElement.className = 'status-text status-open';
                hoursInfo.classList.remove('store-closed');
            } else {
                // Check if tomorrow is open
                const tomorrow = new Date(now);
                tomorrow.setDate(tomorrow.getDate() + 1);
                const tomorrowDay = tomorrow.getDay();
                
                if (tomorrowDay === 1) {
                    statusElement.textContent = 'üî¥ ‡∏õ‡∏¥‡∏î (‡πÄ‡∏õ‡∏¥‡∏î‡∏ß‡∏±‡∏ô‡∏≠‡∏±‡∏á‡∏Ñ‡∏≤‡∏£ 11:00)';
                } else if (currentTime < openTime) {
                    const hoursUntilOpen = openTime - currentTime;
                    const timeText = hoursUntilOpen > 1 ? `${Math.floor(hoursUntilOpen)} ‡∏ä‡∏°` : `${Math.floor(hoursUntilOpen * 60)} ‡∏ô‡∏≤‡∏ó‡∏µ`;
                    statusElement.textContent = `üü° ‡∏õ‡∏¥‡∏î (‡πÄ‡∏õ‡∏¥‡∏î‡∏≠‡∏µ‡∏Å ${timeText})`;
                } else {
                    statusElement.textContent = 'üî¥ ‡∏õ‡∏¥‡∏î (‡πÄ‡∏õ‡∏¥‡∏î‡∏û‡∏£‡∏∏‡πà‡∏á‡∏ô‡∏µ‡πâ 11:00)';
                }
                statusElement.className = 'status-text status-closed';
                hoursInfo.classList.add('store-closed');
            }
        }

        // Initialize page
        document.addEventListener('DOMContentLoaded', () => {
            checkAuth();
            updateStoreStatus();
            
            // Update store status every minute
            setInterval(updateStoreStatus, 60000);
        });
    </script>
</body>
</html>