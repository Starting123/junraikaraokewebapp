<!DOCTYPE html>
<html lang="th">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>เข้าสู่ระบบ - Junrai Karaoke</title>
    <link rel="stylesheet" href="/stylesheets/global.css">
    <link rel="stylesheet" href="/stylesheets/auth.css">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
</head>
<body>
    <!-- Navigation -->
    <nav class="navbar">
        <div class="container">
            <div class="navbar-content">
                <a href="/" class="navbar-brand">
                    <i class="fas fa-microphone-alt"></i>
                    Junrai Karaoke
                </a>
                
                <div class="navbar-main">
                    <ul class="navbar-nav">
                        <li><a href="/" class="nav-link">หน้าหลัก</a></li>
                        <li><a href="/rooms" class="nav-link">ห้องคาราโอเกะ</a></li>
                        <li><a href="/bookings" class="nav-link" id="bookingsLink" style="display: none;">การจอง</a></li>
                        <li><a href="/contact" class="nav-link">ติดต่อเรา</a></li>
                        <li><a href="/admin" class="nav-link admin-link" id="adminLink" style="display: none;">
                            <i class="fas fa-shield-alt"></i> แดชบอร์ดผู้ดูแล
                        </a></li>
                        <li><a href="/auth" class="nav-link" id="authLink">เข้าสู่ระบบ</a></li>
                        <li><button class="btn btn-outline" onclick="logout()" id="logoutBtn" style="display: none;">ออกจากระบบ</button></li>
                    </ul>
                    
                    <!-- Store Hours Info -->
                    <div class="store-hours-info" id="storeHoursInfo">
                        <div class="hours-display">
                            <i class="fas fa-clock"></i>
                            <div class="hours-text">
                                <span class="hours-time">11.00 - 21.00</span>
                                <span class="hours-duration">10 ชม</span>
                            </div>
                        </div>
                        <div class="days-display">
                            <span class="open-days">เปิด: อังคาร - อาทิตย์</span>
                            <span class="closed-day">(หยุด) จันทร์</span>
                        </div>
                        <div class="store-status" id="storeStatus">
                            <span class="status-text" id="statusText">กำลังตรวจสอบ...</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </nav>

    <div class="auth-container">
        <div class="auth-wrapper">
            <!-- Login Form -->
            <div class="auth-card" id="loginCard">
                <div class="auth-header">
                    <h2><i class="fas fa-sign-in-alt"></i> เข้าสู่ระบบ</h2>
                    <p>ยินดีต้อนรับกลับสู่ Junrai Karaoke</p>
                </div>
                
                <form id="loginForm" class="auth-form" data-validate data-rules='{}'>
                    <div class="form-field">
                        <label class="form-label">
                            <i class="fas fa-envelope"></i> อีเมล
                        </label>
                        <input 
                            type="email" 
                            class="form-control" 
                            id="loginEmail" 
                            name="email"
                            placeholder="กรุณาใส่อีเมลของคุณ" 
                            required>
                    </div>
                    
                    <div class="form-field">
                        <label class="form-label">
                            <i class="fas fa-lock"></i> รหัสผ่าน
                        </label>
                        <div class="password-input">
                            <input 
                                type="password" 
                                class="form-control" 
                                id="loginPassword" 
                                name="password"
                                placeholder="กรุณาใส่รหัสผ่าน" 
                                required
                                minlength="6">
                            <button type="button" class="password-toggle" onclick="togglePassword('loginPassword')">
                                <i class="fas fa-eye"></i>
                            </button>
                        </div>
                    </div>
                    
                    <button type="submit" class="btn btn-primary auth-btn">
                        <i class="fas fa-sign-in-alt"></i>
                        เข้าสู่ระบบ
                    </button>
                    
                    <!-- Forgot Password Link -->
                    <div class="forgot-password-section">
                        <a href="/forgot-password" class="forgot-password-link">
                            <i class="fas fa-key"></i>
                            ลืมรหัสผ่าน?
                        </a>
                    </div>
                    
                    <div class="auth-divider">
                        <span>หรือ</span>
                    </div>
                    
                    <button type="button" class="btn btn-outline auth-btn" onclick="showRegister()">
                        <i class="fas fa-user-plus"></i>
                        สมัครสมาชิกใหม่
                    </button>
                </form>
                
                <div class="auth-result" id="loginResult"></div>
            </div>

            <!-- Register Form -->
            <div class="auth-card" id="registerCard" style="display: none;">
                <div class="auth-header">
                    <h2><i class="fas fa-user-plus"></i> สมัครสมาชิก</h2>
                    <p>เริ่มต้นการใช้งาน Junrai Karaoke</p>
                </div>
                
                <form id="registerForm" class="auth-form" data-validate data-rules='{}'>
                    <div class="form-field">
                        <label class="form-label">
                            <i class="fas fa-user"></i> ชื่อ-นามสกุล
                        </label>
                        <input 
                            type="text" 
                            class="form-control" 
                            id="registerName" 
                            name="name"
                            placeholder="กรุณาใส่ชื่อ-นามสกุล" 
                            required
                            minlength="2"
                            maxlength="100">
                    </div>
                    
                    <div class="form-field">
                        <label class="form-label">
                            <i class="fas fa-envelope"></i> อีเมล
                        </label>
                        <input 
                            type="email" 
                            class="form-control" 
                            id="registerEmail" 
                            name="email"
                            placeholder="กรุณาใส่อีเมลของคุณ" 
                            required
                            data-validator="unique"
                            data-unique-endpoint="/api/auth/check-email">
                    </div>
                    
                    <div class="form-field">
                        <label class="form-label">
                            <i class="fas fa-lock"></i> รหัสผ่าน
                        </label>
                        <div class="password-input">
                            <input 
                                type="password" 
                                class="form-control" 
                                id="registerPassword" 
                                name="password"
                                placeholder="กรุณาใส่รหัสผ่าน (อย่างน้อย 8 ตัวอักษร)" 
                                required
                                minlength="8"
                                data-validator="strongPassword">
                            <button type="button" class="password-toggle" onclick="togglePassword('registerPassword')">
                                <i class="fas fa-eye"></i>
                            </button>
                        </div>
                        
                        <!-- Password Strength Meter -->
                        <div class="password-strength" id="registerPasswordStrength" style="display: none;">
                            <div class="strength-meter">
                                <div class="strength-bar" id="registerStrengthBar"></div>
                            </div>
                            <div class="strength-text" id="registerStrengthText"></div>
                        </div>
                    </div>
                    
                    <div class="form-field">
                        <label class="form-label">
                            <i class="fas fa-lock"></i> ยืนยันรหัสผ่าน
                        </label>
                        <div class="password-input">
                            <input 
                                type="password" 
                                class="form-control" 
                                id="registerConfirmPassword" 
                                name="confirmPassword"
                                placeholder="กรุณายืนยันรหัสผ่าน" 
                                required
                                data-match="registerPassword">
                            <button type="button" class="password-toggle" onclick="togglePassword('registerConfirmPassword')">
                                <i class="fas fa-eye"></i>
                            </button>
                        </div>
                    </div>
                    
                    <!-- Password Requirements -->
                    <div class="password-requirements">
                        <h4>
                            <i class="fas fa-shield-alt"></i>
                            ข้อกำหนดรหัสผ่าน
                        </h4>
                        <ul class="requirements-list">
                            <li id="register-req-length">อย่างน้อย 8 ตัวอักษร</li>
                            <li id="register-req-lowercase">ตัวพิมพ์เล็ก (a-z)</li>
                            <li id="register-req-uppercase">ตัวพิมพ์ใหญ่ (A-Z)</li>
                            <li id="register-req-number">ตัวเลข (0-9)</li>
                            <li id="register-req-special">ตัวอักษรพิเศษ (@$!%*?&)</li>
                            <li id="register-req-match">รหัสผ่านตรงกัน</li>
                        </ul>
                    </div>
                    
                    <button type="submit" class="btn btn-primary auth-btn">
                        <i class="fas fa-user-plus"></i>
                        สมัครสมาชิก
                    </button>
                    
                    <div class="auth-divider">
                        <span>หรือ</span>
                    </div>
                    
                    <button type="button" class="btn btn-outline auth-btn" onclick="showLogin()">
                        <i class="fas fa-sign-in-alt"></i>
                        เข้าสู่ระบบ
                    </button>
                </form>
                
                <div class="auth-result" id="registerResult"></div>
            </div>
        </div>
    </div>

    <!-- Loading Overlay -->
    <div class="loading-overlay" id="loadingOverlay">
        <div class="loading-content">
            <div class="spinner"></div>
            <p>กำลังดำเนินการ...</p>
        </div>
    </div>

    <script>
        // Global variables
        let currentUser = null;
        const API_BASE = '/api';

        // Toggle between login and register forms
        function showLogin() {
            document.getElementById('loginCard').style.display = 'block';
            document.getElementById('registerCard').style.display = 'none';
            clearResults();
        }

        function showRegister() {
            document.getElementById('loginCard').style.display = 'none';
            document.getElementById('registerCard').style.display = 'block';
            clearResults();
        }

        // Toggle password visibility
        function togglePassword(inputId) {
            const input = document.getElementById(inputId);
            const icon = input.nextElementSibling.querySelector('i');
            
            if (input.type === 'password') {
                input.type = 'text';
                icon.className = 'fas fa-eye-slash';
            } else {
                input.type = 'password';
                icon.className = 'fas fa-eye';
            }
        }

        // Show/Hide loading
        function showLoading() {
            document.getElementById('loadingOverlay').style.display = 'flex';
        }

        function hideLoading() {
            document.getElementById('loadingOverlay').style.display = 'none';
        }

        // Clear results
        function clearResults() {
            document.getElementById('loginResult').innerHTML = '';
            document.getElementById('registerResult').innerHTML = '';
        }

        // Show result message
        function showResult(elementId, message, type = 'info') {
            const element = document.getElementById(elementId);
            const iconClass = {
                'success': 'fas fa-check-circle',
                'error': 'fas fa-exclamation-circle',
                'warning': 'fas fa-exclamation-triangle',
                'info': 'fas fa-info-circle'
            }[type];

            element.innerHTML = `
                <div class="alert alert-${type}">
                    <i class="${iconClass}"></i>
                    ${message}
                </div>
            `;
        }

        // Login form submission
        document.getElementById('loginForm').addEventListener('submit', async (e) => {
            e.preventDefault();
            
            const email = document.getElementById('loginEmail').value;
            const password = document.getElementById('loginPassword').value;
            
            if (!email || !password) {
                showResult('loginResult', 'กรุณากรอกข้อมูลให้ครบถ้วน', 'warning');
                return;
            }

            showLoading();
            clearResults();

            try {
                const response = await fetch(`${API_BASE}/auth/login`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ email, password })
                });

                const data = await response.json();

                if (response.ok) {
                    // Store token and user data
                    localStorage.setItem('token', data.token);
                    localStorage.setItem('user', JSON.stringify(data.user));
                    
                    showResult('loginResult', 
                        `เข้าสู่ระบบสำเร็จ! ยินดีต้อนรับ ${data.user.name}`, 'success');
                    
                    // Redirect after 2 seconds
                    setTimeout(() => {
                        window.location.href = data.user.role_id === 1 ? '/admin' : '/dashboard';
                    }, 2000);
                } else {
                    showResult('loginResult', 
                        data.error || 'อีเมลหรือรหัสผ่านไม่ถูกต้อง', 'error');
                }
            } catch (error) {
                console.error('Login error:', error);
                showResult('loginResult', 'เกิดข้อผิดพลาดในการเข้าสู่ระบบ', 'error');
            } finally {
                hideLoading();
            }
        });

        // Password validation functions
        function validateRegisterPasswordStrength(password) {
            const strengthIndicator = document.getElementById('registerPasswordStrength');
            const strengthBar = document.getElementById('registerStrengthBar');
            const strengthText = document.getElementById('registerStrengthText');
            
            if (!password) {
                strengthIndicator.style.display = 'none';
                return false;
            }
            
            strengthIndicator.style.display = 'block';
            
            let score = 0;
            const requirements = {
                length: password.length >= 8,
                lowercase: /[a-z]/.test(password),
                uppercase: /[A-Z]/.test(password),
                number: /\d/.test(password),
                special: /[@$!%*?&]/.test(password)
            };
            
            // Update requirement indicators
            document.getElementById('register-req-length').classList.toggle('valid', requirements.length);
            document.getElementById('register-req-lowercase').classList.toggle('valid', requirements.lowercase);
            document.getElementById('register-req-uppercase').classList.toggle('valid', requirements.uppercase);
            document.getElementById('register-req-number').classList.toggle('valid', requirements.number);
            document.getElementById('register-req-special').classList.toggle('valid', requirements.special);
            
            // Calculate strength
            Object.values(requirements).forEach(req => {
                if (req) score++;
            });
            
            // Update strength meter
            strengthIndicator.className = 'password-strength';
            if (score < 3) {
                strengthIndicator.classList.add('strength-weak');
                strengthText.textContent = 'รหัสผ่านอ่อน';
            } else if (score < 5) {
                strengthIndicator.classList.add('strength-medium');
                strengthText.textContent = 'รหัสผ่านปานกลาง';
            } else {
                strengthIndicator.classList.add('strength-strong');
                strengthText.textContent = 'รหัสผ่านแข็งแกร่ง';
            }
            
            return score === 5; // All requirements met
        }
        
        function validateRegisterPasswordMatch() {
            const password = document.getElementById('registerPassword').value;
            const confirmPassword = document.getElementById('registerConfirmPassword').value;
            
            const matchReq = document.getElementById('register-req-match');
            const isMatch = password && confirmPassword && password === confirmPassword;
            
            matchReq.classList.toggle('valid', isMatch);
            
            return isMatch;
        }

        // Add event listeners for real-time validation
        document.getElementById('registerPassword').addEventListener('input', function() {
            validateRegisterPasswordStrength(this.value);
            validateRegisterPasswordMatch();
        });
        
        document.getElementById('registerConfirmPassword').addEventListener('input', function() {
            validateRegisterPasswordMatch();
        });

        // Register form submission
        document.getElementById('registerForm').addEventListener('submit', async (e) => {
            e.preventDefault();
            
            const name = document.getElementById('registerName').value;
            const email = document.getElementById('registerEmail').value;
            const password = document.getElementById('registerPassword').value;
            const confirmPassword = document.getElementById('registerConfirmPassword').value;
            
            // Enhanced validation
            if (!name || !email || !password || !confirmPassword) {
                showResult('registerResult', 'กรุณากรอกข้อมูลให้ครบถ้วน', 'warning');
                return;
            }

            if (!validateRegisterPasswordStrength(password)) {
                showResult('registerResult', 'รหัสผ่านไม่ตรงตามข้อกำหนด กรุณาตรวจสอบข้อกำหนดด้านล่าง', 'warning');
                return;
            }

            if (!validateRegisterPasswordMatch()) {
                showResult('registerResult', 'รหัสผ่านไม่ตรงกัน', 'warning');
                return;
            }

            showLoading();
            clearResults();

            try {
                const response = await fetch(`${API_BASE}/auth/register`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ name, email, password, confirmPassword })
                });

                const data = await response.json();

                if (response.ok) {
                    showResult('registerResult', 
                        'สมัครสมาชิกสำเร็จ! กรุณาเข้าสู่ระบบ', 'success');
                    
                    // Switch to login form after 2 seconds
                    setTimeout(() => {
                        showLogin();
                        document.getElementById('loginEmail').value = email;
                    }, 2000);
                } else {
                    if (data.errors && data.errors.length > 0) {
                        const errorMessages = data.errors.map(err => err.msg).join(', ');
                        showResult('registerResult', errorMessages, 'error');
                    } else {
                        showResult('registerResult', 
                            data.error || 'เกิดข้อผิดพลาดในการสมัครสมาชิก', 'error');
                    }
                }
            } catch (error) {
                console.error('Register error:', error);
                showResult('registerResult', 'เกิดข้อผิดพลาดในการสมัครสมาชิก', 'error');
            } finally {
                hideLoading();
            }
        });

        // Check if user is already logged in
        function checkAuth() {
            const token = localStorage.getItem('token');
            const user = localStorage.getItem('user');
            
            if (token && user) {
                // Redirect to appropriate dashboard
                const userData = JSON.parse(user);
                window.location.href = userData.role_id === 1 ? '/admin' : '/dashboard';
            }
        }

        // Store Hours Management
        function updateStoreStatus() {
            const now = new Date();
            const currentDay = now.getDay(); // 0 = Sunday, 1 = Monday, etc.
            const currentHour = now.getHours();
            const currentMinute = now.getMinutes();
            const currentTime = currentHour + (currentMinute / 60);
            
            const statusElement = document.getElementById('statusText');
            const hoursInfo = document.getElementById('storeHoursInfo');
            
            // Store hours: 11:00 - 21:00, Tuesday - Sunday (Closed Monday)
            const openTime = 11; // 11:00
            const closeTime = 21; // 21:00
            const isMonday = currentDay === 1;
            const isOpenDays = currentDay >= 2 || currentDay === 0; // Tuesday-Sunday
            const isWithinHours = currentTime >= openTime && currentTime < closeTime;
            
            if (isMonday) {
                statusElement.textContent = '🔴 ปิด (วันหยุด)';
                statusElement.className = 'status-text status-closed';
                hoursInfo.classList.add('store-closed');
            } else if (isOpenDays && isWithinHours) {
                const hoursLeft = closeTime - currentTime;
                const hoursText = hoursLeft > 1 ? `${Math.floor(hoursLeft)} ชม` : `${Math.floor(hoursLeft * 60)} นาที`;
                statusElement.textContent = `🟢 เปิด (อีก ${hoursText})`;
                statusElement.className = 'status-text status-open';
                hoursInfo.classList.remove('store-closed');
            } else {
                // Check if tomorrow is open
                const tomorrow = new Date(now);
                tomorrow.setDate(tomorrow.getDate() + 1);
                const tomorrowDay = tomorrow.getDay();
                
                if (tomorrowDay === 1) {
                    statusElement.textContent = '🔴 ปิด (เปิดวันอังคาร 11:00)';
                } else if (currentTime < openTime) {
                    const hoursUntilOpen = openTime - currentTime;
                    const timeText = hoursUntilOpen > 1 ? `${Math.floor(hoursUntilOpen)} ชม` : `${Math.floor(hoursUntilOpen * 60)} นาที`;
                    statusElement.textContent = `🟡 ปิด (เปิดอีก ${timeText})`;
                } else {
                    statusElement.textContent = '🔴 ปิด (เปิดพรุ่งนี้ 11:00)';
                }
                statusElement.className = 'status-text status-closed';
                hoursInfo.classList.add('store-closed');
            }
        }

        // Check for URL parameters (success messages)
        function checkUrlParams() {
            const urlParams = new URLSearchParams(window.location.search);
            const message = urlParams.get('message');
            
            if (message) {
                // Create success message element
                const successDiv = document.createElement('div');
                successDiv.className = 'auth-success-message show';
                successDiv.innerHTML = `
                    <i class="fas fa-check-circle"></i>
                    ${decodeURIComponent(message)}
                `;
                
                // Insert before the login card
                const loginCard = document.getElementById('loginCard');
                loginCard.parentNode.insertBefore(successDiv, loginCard);
                
                // Remove the parameter from URL without refresh
                const newUrl = window.location.protocol + "//" + window.location.host + window.location.pathname;
                window.history.replaceState({path: newUrl}, '', newUrl);
                
                // Auto-hide after 10 seconds
                setTimeout(() => {
                    successDiv.style.opacity = '0';
                    setTimeout(() => {
                        successDiv.remove();
                    }, 300);
                }, 10000);
            }
        }

        // Initialize page
        document.addEventListener('DOMContentLoaded', () => {
            checkAuth();
            updateStoreStatus();
            checkUrlParams(); // Check for success messages
            
            // Update store status every minute
            setInterval(updateStoreStatus, 60000);
            
            // Initialize form validation
            const loginForm = document.getElementById('loginForm');
            const registerForm = document.getElementById('registerForm');
            
            if (loginForm) {
                junraiFormValidator.registerForm(loginForm, {
                    email: [
                        { type: 'required' },
                        { type: 'email' }
                    ],
                    password: [
                        { type: 'required' },
                        { type: 'minLength', min: 6 }
                    ]
                });
            }

            if (registerForm) {
                junraiFormValidator.registerForm(registerForm, {
                    name: [
                        { type: 'required' },
                        { type: 'minLength', min: 2 },
                        { type: 'maxLength', max: 100 }
                    ],
                    email: [
                        { type: 'required' },
                        { type: 'email' },
                        { type: 'unique', endpoint: '/api/auth/check-email', field: 'email' }
                    ],
                    password: [
                        { type: 'required' },
                        { type: 'minLength', min: 8 },
                        { type: 'strongPassword' }
                    ],
                    confirmPassword: [
                        { type: 'required' },
                        { type: 'match', match: 'registerPassword' }
                    ]
                });

                // Enhanced password strength indicator
                const passwordField = document.getElementById('registerPassword');
                const strengthMeter = document.getElementById('registerPasswordStrength');
                const strengthBar = document.getElementById('registerStrengthBar');
                const strengthText = document.getElementById('registerStrengthText');

                if (passwordField && strengthMeter) {
                    passwordField.addEventListener('input', function() {
                        const password = this.value;
                        const strength = calculatePasswordStrength(password);
                        
                        strengthMeter.style.display = password.length > 0 ? 'block' : 'none';
                        strengthBar.className = `strength-bar strength-${strength.level}`;
                        strengthBar.style.width = `${strength.score}%`;
                        strengthText.textContent = strength.text;
                    });
                }
            }
        });

        // Password strength calculation
        function calculatePasswordStrength(password) {
            let score = 0;
            let level = 'weak';
            let text = 'รหัสผ่านอ่อน';

            if (password.length >= 8) score += 20;
            if (password.length >= 12) score += 10;
            if (/[a-z]/.test(password)) score += 15;
            if (/[A-Z]/.test(password)) score += 15;
            if (/[0-9]/.test(password)) score += 15;
            if (/[!@#$%^&*(),.?":{}|<>]/.test(password)) score += 25;

            if (score >= 80) {
                level = 'strong';
                text = 'รหัสผ่านแข็งแรง';
            } else if (score >= 60) {
                level = 'medium';
                text = 'รหัสผ่านปานกลาง';
            }

            return { score: Math.min(100, score), level, text };
        }
    </script>
    <script src="/javascripts/modules/form-validator.js"></script>
    <script src="/javascripts/shared/auth-nav.js"></script>
</body>
</html>